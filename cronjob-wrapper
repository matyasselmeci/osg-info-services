#!/bin/sh

# A random delay, lockfile and output control wrapper for cron jobs.
#

die_with_usage () {
    cat >&2 <<'END'
Usage:

    cronjob-wrapper [options] <COMMAND> [ARGS...]

Options:

    -d DELAY            Sleep for a random amount of time no more than
                        DELAY seconds before running the command.

    -l LOCKFILE         If specified, then only run the command if the
                        given lock file exists.

    -f LOGFILE          If specified, then command output is appended
                        to LOGFILE instead of printed to stderr.

Command output is only sent to stderr or the log file if the exit
status is nonzero.
END
    exit 2
}


LOCKFILE=
DELAY=0
LOGFILE=

TEMP=`getopt d:l:f: "$@"`
test $? -eq 0 || die_with_usage

eval set -- "$TEMP"

while true; do
    case $1 in
        -d) DELAY=$2; shift 2;;
        -l) LOCKFILE=$2; shift 2;;
        -f) LOGFILE=$2; shift 2;;
        --) shift; break;;
        *) echo "Unknown argument $1"; die_with_usage;;
    esac
done

test -n "$1" || die_with_usage


if test -n "$LOCKFILE"; then
    test -f "$LOCKFILE" || exit 0
fi

if test 0 -lt "$DELAY"; then
    perl -e "sleep rand $DELAY"
fi

outfile=`mktemp`
echo '========================================' `date` >> $outfile
"$@" >>$outfile 2>&1
ret=$?

if test $ret -ne 0; then
    # Some error happened so we want the output
    if test -n "$LOGFILE"; then
        if test "X$LOGFILE" != X-; then
            cat $outfile >> "$LOGFILE"
        else
            cat $outfile
        fi
    else
        cat $outfile 1>&2
    fi
fi

rm -f $outfile
exit $ret
